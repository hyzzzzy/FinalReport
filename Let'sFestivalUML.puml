@startuml
class FestivalAdapter {
+ {static} String TAG
- LayoutInflater inflater
- Context context
- int layout
- ArrayList<FestivalDTO> list
+ int getCount()
+ FestivalDTO getItem(int)
+ long getItemId(int)
+ View getView(int,View,ViewGroup)
+ void setList(ArrayList<FestivalDTO>)
}
class FestivalAdapter.ViewHolder {
+ TextView tvName
+ TextView tvOpar
+ TextView tvDate
}
class MyFestivalAdapter {
+ {static} String TAG
- LayoutInflater inflater
- Context context
- int layout
- ArrayList<FestivalDTO> list
+ int getCount()
+ FestivalDTO getItem(int)
+ long getItemId(int)
+ View getView(int,View,ViewGroup)
+ void setList(ArrayList<FestivalDTO>)
}
class MyFestivalAdapter.ViewHolder {
+ TextView tvName
+ TextView tvOpar
+ TextView tvDate
+ TextView tvMemo
}
class LikedFestivalActivity {
~ ListView lvList
~ MyFestivalAdapter adapter
~ ArrayList<FestivalDTO> resultList
~ FestivalDBManager festivalDBManager
~ int DETAIL_CODE_IN_LIKED
# void onCreate(Bundle)
# void onResume()
}
class MainActivity {
~ ListView lvList
~ String apiAddress
~ FestivalAdapter adapter
~ ArrayList<FestivalDTO> resultList
~ FestivalXmlParser parser
~ NetworkManager networkManager
~ int DETAIL_CODE
# void onCreate(Bundle)
# void onResume()
+ boolean onCreateOptionsMenu(Menu)
+ void onMenuItemClick(MenuItem)
}
class MainActivity.NetworkAsyncTask {
~ {static} String NETWORK_ERR_MSG
+ {static} String TAG
~ ProgressDialog progressDlg
# void onPreExecute()
# String doInBackground(String)
# void onCancelled(String)
# void onPostExecute(String)
}
class FestivalDBHelper {
~ {static} String TAG
~ {static} String DB_NAME
+ {static} String TABLE_NAME
+ {static} String COL_ID
+ {static} String COL_NAME
+ {static} String COL_START
+ {static} String COL_END
+ {static} String COL_LOC
+ {static} String COL_LAT
+ {static} String COL_LONG
+ {static} String COL_MEMO
+ void onCreate(SQLiteDatabase)
+ void onUpgrade(SQLiteDatabase,int,int)
}
class NetworkManager {
- Context context
+ String downloadContents(String)
+ Bitmap downloadImage(String)
- Bitmap readStreamToBitmap(InputStream)
- String readStreamToString(InputStream)
- boolean isOnline()
- InputStream getNetworkConnection(HttpURLConnection)
}
class FestivalDTO {
- long _id
- String name
- String startDate
- String endDate
- String loc
- String latitude
- String longitude
- String introduction
- String memo
+ String getMemo()
+ void setMemo(String)
+ String getLatitude()
+ void setLatitude(String)
+ String getLongitude()
+ void setLongitude(String)
+ long get_id()
+ String getIntroduction()
+ void setIntroduction(String)
+ String getName()
+ void setName(String)
+ String getStartDate()
+ void setStartDate(String)
+ String getEndDate()
+ void setEndDate(String)
+ String getLoc()
+ void setLoc(String)
}
class SearchActivity {
~ String apiAddress
~ FestivalAdapter adapter
~ NetworkManager networkManager
~ ArrayList<FestivalDTO> resultList
~ FestivalXmlParser parser
~ ListView lvList
~ EditText etSearchName
~ int DETAIL_CODE_IN_SEARCH
# void onCreate(Bundle)
+ void onClick(View)
}
class SearchActivity.NetworkAsyncTask {
~ {static} String NETWORK_ERR_MSG
+ {static} String TAG
~ ProgressDialog progressDlg
# void onPreExecute()
# String doInBackground(String)
# void onCancelled(String)
# void onPostExecute(String)
}
class DetailActivity {
- {static} int MY_PERMISSIONS_REQ_LOC
+ {static} String TAG
- GoogleMap mGoogleMap
- LocationManager locationManager
- Marker centerMarker
- ArrayList<Marker> markerArrayList
~ FestivalDTO Festival
~ TextView etName
~ EditText etMemo
~ FestivalDBManager festivalDBManager
~ LocationListener locationListener
~ OnMapReadyCallback mapReadyCallBack
# void onCreate(Bundle)
+ void onClick(View)
- void locationUpdate()
+ boolean dispatchTouchEvent(MotionEvent)
- boolean checkPermission()
+ void onRequestPermissionsResult(int,String[],int[])
}
class FestivalDBManager {
~ FestivalDBHelper festivalDBHelper
~ Cursor cursor
+ ArrayList<FestivalDTO> getLikedFestival()
+ boolean addNewFestival(FestivalDTO)
+ boolean removeFestival(long)
+ String getFestivalName(String)
+ ArrayList<FestivalDTO> getBookByName(String)
}
class FestivalXmlParser {
- {static} String FAULT_RESULT
- {static} String ITEM_TAG
- {static} String NAME_TAG
- {static} String OPAR_TAG
- {static} String STARTDAY_TAG
- {static} String ENDDAY_TAG
- {static} String LAT_TAG
- {static} String LON_TAG
- {static} String INTRO_TAG
- XmlPullParser parser
+ List<FestivalDTO> parse(String)
}


BaseAdapter <|-- FestivalAdapter
FestivalAdapter +.. FestivalAdapter.ViewHolder
BaseAdapter <|-- MyFestivalAdapter
MyFestivalAdapter +.. MyFestivalAdapter.ViewHolder
AppCompatActivity <|-- LikedFestivalActivity
AppCompatActivity <|-- MainActivity
MainActivity +.. MainActivity.NetworkAsyncTask
AsyncTask <|-- MainActivity.NetworkAsyncTask
SQLiteOpenHelper <|-- FestivalDBHelper
Serializable <|.. FestivalDTO
AppCompatActivity <|-- SearchActivity
SearchActivity +.. SearchActivity.NetworkAsyncTask
AsyncTask <|-- SearchActivity.NetworkAsyncTask
AppCompatActivity <|-- DetailActivity
@enduml